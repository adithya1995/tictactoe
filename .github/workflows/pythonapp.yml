# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 2.7
      uses: actions/setup-python@v1
      with:
        python-version: 2.7
    - name: Install dependencies & gcc
      run: |
        python -m pip install --upgrade pip
        sudo apt install build-essential
        ls
    - name: Set up Java (CoPilot)
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Upload to CoPilot
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      run: bash <(curl -s https://copilot-test.blackducksoftware.com/ci/githubactions/scripts/upload)
#     - name: Download Coverity Build Tool
#       env:
#         SUPER_SECRET: ${{ secrets.COVERITY_SCAN_TOKEN }}
#       run: |
#           wget https://scan.coverity.com/download/linux64 --post-data "token=$SUPER_SECRET&project=adithya1995%2Ftictactoe" -O cov-analysis-linux64.tar.gz
#           mkdir cov-analysis-linux64
#           tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
#     - name: Fixed world writable dirs
#       run: |
#           chmod go-w $HOME
#           sudo chmod -R go-w /usr/share
#     - name: Configure with gcc and Python
#       run: |
#           export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
#           cov-configure --compiler /usr/bin/gcc --comptype gcc
#           cov-configure --python
#     - name: Build with cov-build for Python & C++
#       run: |
#           export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
#           cov-build --dir coverity gcc hello.cpp 
#           cov-build --append-log --dir coverity --fs-capture-search ./ --no-command 
#     - name: Analyze with Coverity 
#       env:
#         SUPER_SECRET: ${{ secrets.COVERITY_SCAN_TOKEN }}
#       run:
#           tar caf cov.lzma coverity
# #           curl \
# #           --form token=$SUPER_SECRET \
# #           --form email=adithya95dk@gmail.com \
# #           --form file=@cov.lzma \
# #           --form version="1.0" \
# #           --form description="Build submitted via Github Actions" \
# #           https://scan.coverity.com/builds?project=adithya1995%2Ftictactoe
#     - name: Test with unittest module
#       run: |
#         python testcalc.py
